<UserControl x:Class="PoeLurker.UI.Views.HotkeyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Converters="clr-namespace:PoeLurker.UI.Converters"
             xmlns:Winook="clr-namespace:Winook;assembly=Winook"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:PoeLurker.UI.Views"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             d:DesignHeight="130"
             d:DesignWidth="250"
             Focusable="False"
             mc:Ignorable="d">
    <Border Height="100"
            Background="#303030"
            CornerRadius="8"
            Focusable="False">
        <Grid>
            <Label x:Name="NameValue"
                   HorizontalAlignment="Center"
                   FontFamily="pack://application:,,,/Assets/#Fontin"
                   FontSize="20"
                   Foreground="#af8404" />

            <Grid Width="180" HorizontalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="1"
                            HorizontalAlignment="Center"
                            Orientation="Horizontal">

                    <Border Grid.Row="1"
                            Width="60"
                            Height="40"
                            Background="Gray"
                            BorderBrush="#606060"
                            BorderThickness="3"
                            CornerRadius="10"
                            Visibility="{Binding HasModifier, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid>
                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontFamily="pack://application:,,,/Assets/#Fontin"
                                       FontWeight="Bold"
                                       Visibility="{Binding Modifier, Converter={Converters:ModifierConverter}, ConverterParameter={x:Static Winook:Modifiers.Alt}}">
                                Alt
                            </TextBlock>
                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontFamily="pack://application:,,,/Assets/#Fontin"
                                       FontWeight="Bold"
                                       Visibility="{Binding Modifier, Converter={Converters:ModifierConverter}, ConverterParameter={x:Static Winook:Modifiers.Control}}">
                                Ctrl
                            </TextBlock>
                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontFamily="pack://application:,,,/Assets/#Fontin"
                                       FontWeight="Bold"
                                       Visibility="{Binding Modifier, Converter={Converters:ModifierConverter}, ConverterParameter={x:Static Winook:Modifiers.Shift}}">
                                Shift
                            </TextBlock>
                        </Grid>
                    </Border>
                    <TextBlock Grid.Row="1"
                               Grid.Column="1"
                               Margin="6,0,6,0"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontFamily="pack://application:,,,/Assets/#Fontin"
                               FontSize="25"
                               Foreground="Gray"
                               Visibility="{Binding HasModifier, Converter={StaticResource BooleanToVisibilityConverter}}">
                        ➞
                    </TextBlock>
                    <Border Width="60"
                            Height="30"
                            Background="{StaticResource MahApps.Brushes.Accent3}"
                            CornerRadius="4"
                            Focusable="False"
                            Visibility="{Binding HasKeyCode, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <TextBlock x:Name="KeyCode"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontFamily="pack://application:,,,/Assets/#Fontin"
                                   FontSize="12"
                                   FontWeight="Bold" />
                    </Border>
                </StackPanel>
                <Button x:Name="SetKeyCode"
                        Grid.Row="1"
                        Width="45"
                        Height="45"
                        Cursor="Hand"
                        Style="{DynamicResource MahApps.Styles.Button.Circle}"
                        Visibility="{Binding NotDefined, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button.Content>
                        <TextBlock FontFamily="pack://application:,,,/Assets/#Fontin"
                                   FontSize="25"
                                   FontWeight="ExtraBold">
                            +
                        </TextBlock>
                    </Button.Content>
                </Button>
            </Grid>
            <Button Grid.Column="2"
                    Width="30"
                    Height="30"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    cal:Message.Attach="[Event Click] = [Action Remove()]"
                    Background="Red"
                    Cursor="Hand"
                    Focusable="False"
                    Visibility="{Binding HasKeyCode, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border CornerRadius="0,8,0,20">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Background" Value="LightGray" />
                                                <Setter Property="Opacity" Value="0.05" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="Red" />
                                                        <Setter Property="Opacity" Value="0.75" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </Border>
</UserControl>
