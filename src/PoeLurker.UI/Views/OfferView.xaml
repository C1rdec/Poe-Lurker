<UserControl x:Class="PoeLurker.UI.Views.OfferView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Converters="clr-namespace:PoeLurker.UI.Converters"
             xmlns:Local="clr-namespace:PoeLurker.UI.ViewModels"
             xmlns:Models="clr-namespace:PoeLurker.Patreon.Models;assembly=PoeLurker.Patreon"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:PoeLurker.UI"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             d:DesignHeight="65"
             d:DesignWidth="65"
             mc:Ignorable="d">
    <Border cal:Message.Attach="[Event PreviewMouseDownEvent] = [Action OnMouseDown]; [Event PreviewMouseUpEvent] = [Action OnMouseUp] ; [Event MouseLeave] = [Action OnMouseLeave]"
            BorderThickness="2"
            CornerRadius="4">
        <Border.Style>
            <Style TargetType="Border">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Active}" Value="True">
                        <Setter Property="BorderBrush" Value="#e7b577" />
                        <Setter Property="Background" Value="#e7b577" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Button x:Name="MainAction"
                MinWidth="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                MaxWidth="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                Cursor="Hand"
                ToolTipService.InitialShowDelay="{Binding ToolTipDelay}">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border cal:Message.Attach="[Event MouseRightButtonUpEvent] = [Action RightClick]" CornerRadius="4">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="#BDC2BF" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#E3E7D3" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{Binding ButtonHeight}" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Popup Width="{Binding ActualHeight, ElementName=MainAction}"
                                   Height="{Binding ActualHeight, ElementName=MainAction}"
                                   AllowsTransparency="True"
                                   IsOpen="{Binding ShowDetail}"
                                   Placement="Top"
                                   PopupAnimation="Slide">
                                <UserControl x:Name="Details" cal:View.Model="{Binding Path=Details, Mode=OneWay}" />
                            </Popup>
                            <Grid Grid.RowSpan="2"
                                  Grid.ColumnSpan="3"
                                  Visibility="{Binding NotSold, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="2" CornerRadius="0,0,4,4">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="Background" Value="#747771" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static Local:OfferStatus.Invited}">
                                                    <Setter Property="Background" Value="Blue" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static Local:OfferStatus.Traded}">
                                                    <Setter Property="Background" Value="Green" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                                <ContentControl cal:View.Model="{Binding Path=Currency, Mode=OneWay}"
                                                Grid.RowSpan="3"
                                                Width="{Binding ActualWidth, ElementName=MainAction}"
                                                Height="{Binding ActualHeight, ElementName=MainAction}"></ContentControl>
                                <local:IconPack Grid.Row="2"
                                                Width="15"
                                                Height="15"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Data="{x:Static local:IconPackData.InInstance}"
                                                Foreground="White"
                                                Visibility="{Binding BuyerInSameInstance, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                <TextBlock Grid.Row="2"
                                           Margin="0,0,4,0"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Bottom"
                                           FontSize="{Binding FontSize}"
                                           FontWeight="Bold"
                                           Foreground="White"
                                           TextTrimming="CharacterEllipsis">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Text" Value="{Binding NumberOffCurrency}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding NumberOffCurrency}" Value="0">
                                                    <Setter Property="Text" Value="{Binding ItemName}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                            <Button cal:Message.Attach="[Event Click] = [Action Wait]" Visibility="{Binding NotSold, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border CornerRadius="4,0,20,0">
                                                        <Border.Style>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="Background" Value="Gray" />
                                                                <Setter Property="Opacity" Value="0.25" />
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" Value="Blue" />
                                                                        <Setter Property="Opacity" Value="0.75" />
                                                                    </Trigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="False" />
                                                                            <Condition Binding="{Binding Waiting}" Value="True" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter Property="Background" Value="Blue" />
                                                                        <Setter Property="Opacity" Value="0.75" />
                                                                    </MultiDataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="False" />
                                                    <Condition Binding="{Binding Waiting}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Grid.Column="2"
                                    cal:Message.Attach="[Event Click] = [Action Remove]"
                                    Background="Red">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border CornerRadius="0,4,0,20">
                                                        <Border.Style>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="Background" Value="Gray" />
                                                                <Setter Property="Opacity" Value="0.25" />
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" Value="Red" />
                                                                        <Setter Property="Opacity" Value="0.75" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <Button Grid.Column="0"
                                    cal:Message.Attach="[Event Click] = [Action DismissCart]"
                                    Background="Blue"
                                    Visibility="{Binding AlreadySold, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border CornerRadius="4,0,20,0">
                                                        <Border.Style>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="Background" Value="Gray" />
                                                                <Setter Property="Opacity" Value="0.25" />
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" Value="Blue" />
                                                                        <Setter Property="Opacity" Value="0.75" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <local:IconPack Grid.RowSpan="2"
                                            Grid.ColumnSpan="3"
                                            Width="30"
                                            Height="30"
                                            Data="{x:Static local:IconPackData.Sold}"
                                            FontWeight="Bold"
                                            Foreground="Red"
                                            Visibility="{Binding AlreadySold, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Button.Template>
            <Button.Style>
                <Style TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ToolTipEnabled}" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <ToolTip Placement="Top">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row="0" Text="{Binding PlayerName}" />
                                            <TextBlock Grid.Row="1" Text="{Binding ItemName}" />
                                            <TextBlock Grid.Row="2" Text="{Binding Location}">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <Trigger Property="Text" Value="">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <TextBlock Grid.Row="3" Text="{Binding Date}" />
                                        </Grid>
                                    </ToolTip>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Border>
</UserControl>
