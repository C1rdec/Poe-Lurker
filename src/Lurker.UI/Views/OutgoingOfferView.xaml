<UserControl x:Class="Lurker.UI.Views.OutgoingOfferView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:local="clr-namespace:Lurker.UI.Views"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             mc:Ignorable="d" >
    <Border BorderThickness="1" CornerRadius="2" Margin="0,0,0,2" Focusable="False">
        <Border.Style>
            <Style TargetType="Border">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Active}" Value="True">
                        <Setter Property="BorderBrush" Value="#e7b577"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Button x:Name="MainAction" Focusable="False" Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" >
            <Button.Template>
            <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" cal:Message.Attach="[Event MouseRightButtonUpEvent] = [Action WhoIs]">
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="#5f4321"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#845e2e"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Grid>
                        <Controls:MetroProgressBar x:Name="Delay" Foreground="#4b351b" Value="{Binding DelayToClose}" Height="{Binding ActualHeight, ElementName=MainAction}" />
                        <TextBlock FontFamily="pack://application:,,,/Assets/#Fontin"
                                   Foreground="#cb9e68"
                                   FontSize="12"
                                   TextTrimming="CharacterEllipsis"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" 
                                   Text="{Binding PlayerName}"/>
                        <Button HorizontalAlignment="Left" VerticalAlignment="Top" Height="15" Width="15" cal:Message.Attach="[Event Click] = [Action ReSend]" x:Name="IsWaiting">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border CornerRadius="4,0,20,0">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="Background" Value="Gray"/>
                                                            <Setter Property="Opacity" Value="0.25"/>

                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="#dec2a1" />
                                                                    <Setter Property="Opacity" Value="0.75"/>
                                                                </Trigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="False"/>
                                                                        <Condition Binding="{Binding Waiting}" Value="True"/>
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Background" Value="#d1aa7b" />
                                                                    <Setter Property="Opacity" Value="0.75"/>
                                                                </MultiDataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="False"/>
                                                <Condition Binding="{Binding Waiting}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button HorizontalAlignment="Right" VerticalAlignment="Top" Background="Red" Height="15" Width="15" cal:Message.Attach="[Event Click] = [Action Remove]" >
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border CornerRadius="0,4,0,20">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="Background" Value="Gray"/>
                                                            <Setter Property="Opacity" Value="0.25"/>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="Red" />
                                                                    <Setter Property="Opacity" Value="0.75"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </Border>
            </ControlTemplate>
        </Button.Template>
        </Button>
    </Border>

</UserControl>
