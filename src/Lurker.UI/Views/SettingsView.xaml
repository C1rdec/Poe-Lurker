<Controls:MetroWindow x:Class="Lurker.UI.Views.SettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:local="clr-namespace:Lurker.UI"
        WindowStartupLocation="CenterScreen"
        xmlns:lottieSharp="clr-namespace:LottieSharp;assembly=LottieSharp"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        ResizeMode="CanMinimize"
        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        Dialog:DialogParticipation.Register="{Binding}"
        mc:Ignorable="d" Height="450" Width="800">
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Cursor="Hand" cal:Message.Attach="[Event Click] = [Action OpenPatreon]">
                <StackPanel Orientation="Horizontal">
                    <local:IconPack Foreground="White"
                                    Width="18"
                                    HorizontalAlignment="Center"
                                    Data="{x:Static local:IconPackData.Patreon}"/>
                    <TextBlock Margin="4" VerticalAlignment="Center" Text="Patreon" />
                </StackPanel>
            </Button>
            <Button Cursor="Hand" cal:Message.Attach="[Event Click] = [Action OpenDiscord]">
                <StackPanel Orientation="Horizontal">
                    <local:IconPack Foreground="White"
                                    Width="25"
                                    HorizontalAlignment="Center"
                                    Data="{x:Static local:IconPackData.Discord}"/>
                    <TextBlock Margin="4" VerticalAlignment="Center" Text="Discord" />
                </StackPanel>
            </Button>
            <Button Cursor="Hand" cal:Message.Attach="[Event Click] = [Action OpenLogs]" >
                <Button.Content>
                    <TextBlock Text="{Binding Version}"/>
                </Button.Content>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Grid>
        <Grid.Resources>
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
        </Grid.Resources>

        <Controls:MetroAnimatedTabControl Controls:TabControlHelper.IsUnderlined="True" SelectedIndex="{Binding SelectTabIndex}" Controls:TabControlHelper.Underlined="TabPanel" TabStripPlacement="Left">
            <TabItem Header="Builds" Width="175">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition Height="80"></RowDefinition>
                    </Grid.RowDefinitions>
                    
                    <StackPanel Margin="30,0,0,0" Grid.Row="2" HorizontalAlignment="Left" Orientation="Horizontal" VerticalAlignment="Center">
                        <Controls:ToggleSwitch Header="Sync"
                                               ToolTip="Sync builds from Path of Building"
                                               IsChecked="{Binding SyncBuild}"/>

                        <Controls:ToggleSwitch Header="Build Helper"
                                               Margin="20,0,0,0"
                                               IsChecked="{Binding BuildHelper}"/>
                        <Grid Margin="10,0,0,0" Visibility="{Binding BuildHelper, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Label FontWeight="Bold" FontSize="12" VerticalAlignment="Bottom">Toggle Key</Label>
                            <Button x:Name="SetToggleBuildKeyCode" Grid.Row="1" VerticalAlignment="Center" Margin="4,0,0,3" Cursor="Hand" Style="{DynamicResource Tag}" Focusable="False">
                                <TextBlock x:Name="ToggleBuildKeyValue" Foreground="White" FontSize="12"></TextBlock>
                            </Button>
                        </Grid>
                    </StackPanel>

                    <Label Content="Builds" Style="{DynamicResource LabelHeaderStyle}" />
                    <Button Width="50"
                            x:Name="OpenCharacters"
                            BorderThickness="0"
                            Cursor="Hand"
                            ToolTip="Characters"
                            Height="50"
                            Margin="150,0,0,0"
                    Style="{DynamicResource MetroCircleButtonStyle}">
                        <Button.Content>
                            <local:IconPack Foreground="White"
                                            Width="25"
                                    HorizontalAlignment="Center"
                                            Data="{x:Static local:IconPackData.Group}"/>
                        </Button.Content>
                    </Button>

                    <ContentControl x:Name="BuildManager" Grid.Row="1" Grid.RowSpan="2"/>
                    <Controls:Flyout IsOpen="{Binding IsCharacterOpen}" Header="Characters" FlowDirection="LeftToRight" Position="Right" Grid.RowSpan="3" Width="622">
                        <ContentControl x:Name="CharacterManager"/>
                    </Controls:Flyout>
                </Grid>
            </TabItem>
            <TabItem Header="Message" Width="175">
                <StackPanel>
                    <Label Content="Message" Style="{DynamicResource LabelHeaderStyle}" />
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,30,0">
                        <Button Style="{DynamicResource Tag}"
                                Focusable="False"
                                Content="Item Name"
                                cal:Message.Attach="[Event Click] = [Action InsertItemNameToken]">
                        </Button>
                        <Button Style="{DynamicResource Tag}"
                                Content="Buyer Name"
                                Focusable="False"
                                cal:Message.Attach="[Event Click] = [Action InsertBuyerNameToken]"
                                Margin="4,0,0,0">
                        </Button>
                        <Button Style="{DynamicResource Tag}"
                                Content="Price"
                                Focusable="False"
                                cal:Message.Attach="[Event Click] = [Action InsertPriceToken]"
                                Margin="4,0,0,0">
                        </Button>
                        <Button Style="{DynamicResource Tag}"
                                Content="Location"
                                Focusable="False"
                                cal:Message.Attach="[Event Click] = [Action InsertLocationToken]"
                                Margin="4,0,0,0">
                        </Button>
                    </StackPanel>
                    <StackPanel Margin="30,0,30,0">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type Controls:MetroHeader}">
                                <Setter Property="Margin" Value="0,15,0,0"/>
                            </Style>
                        </StackPanel.Resources>
                        <Controls:MetroHeader Header="Busy">
                            <Controls:MetroHeader.HeaderTemplate>
                                <DataTemplate>
                                    <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                        <TextBlock Margin="2 0 0 0"
                                                   FontSize="18"
                                                   VerticalAlignment="Center"
                                                   Text="{Binding}" />
                                    </StackPanel>
                                </DataTemplate>
                            </Controls:MetroHeader.HeaderTemplate>
                            <TextBox Text="{Binding BusyMessage, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0,0,0,1" x:Name="BusyMessage"/>
                        </Controls:MetroHeader>
                        <Controls:MetroHeader Header="Still Interested">
                            <Controls:MetroHeader.HeaderTemplate>
                                <DataTemplate>
                                    <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                        <TextBlock Margin="2 0 0 0"
                                                   FontSize="18"
                                                   VerticalAlignment="Center"
                                                   Text="{Binding}" />
                                        <TextBlock Margin="4 0 0 0"
                                                   Foreground="{DynamicResource AccentColorBrush}"
                                                   FontSize="12"
                                                   VerticalAlignment="Center"
                                                   Text="(Ctrl + Shift)" />
                                        
                                    </StackPanel>
                                </DataTemplate>
                            </Controls:MetroHeader.HeaderTemplate>
                            <TextBox Text="{Binding StillInterestedMessage, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0,0,0,1" />
                        </Controls:MetroHeader>
                        <Controls:MetroHeader Header="Sold">
                            <Controls:MetroHeader.HeaderTemplate>
                                <DataTemplate>
                                    <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                        <TextBlock Margin="2 0 0 0"
                                                   FontSize="18"
                                                   VerticalAlignment="Center"
                                                   Text="{Binding}" />
                                        <TextBlock Margin="4 0 0 0"
                                                   Foreground="{DynamicResource AccentColorBrush}"
                                                   FontSize="12"
                                                   VerticalAlignment="Center"
                                                   Text="(Ctrl)" />
                                    </StackPanel>
                                </DataTemplate>
                            </Controls:MetroHeader.HeaderTemplate>
                            <TextBox Text="{Binding SoldMessage, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0,0,0,1"/>
                        </Controls:MetroHeader>
                        <Controls:MetroHeader Header="Thank you">
                            <Controls:MetroHeader.HeaderTemplate>
                                <DataTemplate>
                                    <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                        <TextBlock Margin="2 0 0 0"
                                                   FontSize="18"
                                                   VerticalAlignment="Center"
                                                   Text="{Binding}" />
                                    </StackPanel>
                                </DataTemplate>
                            </Controls:MetroHeader.HeaderTemplate>
                            <TextBox Text="{Binding ThankYouMessage, UpdateSourceTrigger=PropertyChanged}" Controls:TextBoxHelper.Watermark="No whisper" BorderThickness="0,0,0,1"/>
                        </Controls:MetroHeader>
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="Notification">
                <Grid Margin="30,0,30,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Label Content="Notification" Style="{DynamicResource LabelHeaderStyle}" />
                    <StackPanel Grid.Row="1">
                        <Grid Grid.Row="2" VerticalAlignment="Top" Margin="0,15,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Controls:ToggleSwitch
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Left"
                                               Header="Offer ToolTip"
                                               IsChecked="{Binding ToolTipEnabled}"/>
                            <Label Grid.Column="1" Visibility="{Binding ToolTipEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center" Margin="0,-40,0,0" >Delay (ms)</Label>
                            <Slider
                                Grid.Column="1"
                                Visibility="{Binding ToolTipEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                                Margin="4,25,0,0"
                                Controls:SliderHelper.ChangeValueBy="SmallChange"
                                Controls:SliderHelper.EnableMouseWheel="MouseHover"
                                AutoToolTipPlacement="TopLeft"
                                LargeChange="10"
                                Maximum="1000"
                                Minimum="0"
                                Orientation="Horizontal"
                                SmallChange="1"
                                Value="{Binding ToolTipDelay}" />
                        </Grid>
                        <Grid Grid.Row="1" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Controls:ToggleSwitch Grid.Row="1"
                                           VerticalAlignment="Top"
                                           HorizontalAlignment="Left"
                                           Header="Join Hideout"
                                           IsChecked="{Binding JoinHideoutEnabled}"/>
                            <Label Grid.Column="1" Visibility="{Binding JoinHideoutEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center" Margin="0,-40,0,0" >Volume</Label>
                            <Slider
                                Grid.Column="1"
                                Visibility="{Binding JoinHideoutEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                                Margin="4,25,0,0"
                                Controls:SliderHelper.ChangeValueBy="SmallChange"
                                Controls:SliderHelper.EnableMouseWheel="MouseHover"
                                AutoToolTipPlacement="TopLeft"
                                LargeChange="10"
                                Maximum="100"
                                Minimum="0"
                                Orientation="Horizontal"
                                SmallChange="1"
                                Value="{Binding JoinHideoutVolume}" />
                        </Grid>
                        <Grid Grid.Row="1" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Controls:ToggleSwitch Grid.Row="1"
                                           VerticalAlignment="Top"
                                           HorizontalAlignment="Left"
                                           Header="Offer Alert"
                                           IsChecked="{Binding AlertEnabled}"/>
                            <StackPanel Grid.Column="1" Visibility="{Binding AlertEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Orientation="Horizontal">
                                <Label  Visibility="{Binding AlertEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center" Margin="0,-40,0,0" >Volume</Label>
                                <ToggleButton Grid.Column="1" 
                                              IsChecked="{Binding HasCustomTradeSound}"
                                              x:Name="SelectTradeSound"
                                              HorizontalAlignment="Left" 
                                              ToolTip="Custom Sound" 
                                              Cursor="Hand" 
                                              VerticalAlignment="Top"
                                              Height="35" Width="35" 
                                              Style="{DynamicResource MetroCircleToggleButtonStyle}"
                                              Margin="5,-6,0,0">
                                    <local:IconPack Foreground="White"
                                                    Opacity="0.8"
                                                    Margin="1,1,0,0"
                                                    Width="20"
                                                    Height="20"
                                            Data="{x:Static local:IconPackData.CustomSound}"/>
                                </ToggleButton>
                            </StackPanel>
                            <Slider
                                Grid.Column="1"
                                Visibility="{Binding AlertEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                                Margin="4,25,0,0"
                                Controls:SliderHelper.ChangeValueBy="SmallChange"
                                Controls:SliderHelper.EnableMouseWheel="MouseHover"
                                AutoToolTipPlacement="TopLeft"
                                LargeChange="10"
                                Maximum="100"
                                Minimum="0"
                                Orientation="Horizontal"
                                SmallChange="1"
                                Value="{Binding AlertVolume}" />
                        </Grid>
                    </StackPanel>
                    <Image Height="30"
                           Grid.Row="1"
                           Cursor="Hand"
                           VerticalAlignment="Bottom"
                           HorizontalAlignment="Right"
                           Margin="0,0,10,65"
                           Visibility="{Binding NotPledging, Converter={StaticResource BooleanToVisibilityConverter}}"
                           cal:Message.Attach="[Event MouseUp] = [Action OpenLurkerPro]"
                           Source="https://user-images.githubusercontent.com/5436436/88303508-1a537980-ccd5-11ea-9e27-9139f994101a.png"
                           />
                    <Grid Grid.Row="1" VerticalAlignment="Bottom" IsEnabled="{Binding Pledging}"  Margin="0,0,0,20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Controls:ToggleSwitch Grid.Row="1"
                                           VerticalAlignment="Top"
                                           HorizontalAlignment="Left"
                                           Header="Item Alert"
                                           IsChecked="{Binding ItemAlertEnabled}"/>
                        <StackPanel Grid.Column="1" Visibility="{Binding AlertEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Orientation="Horizontal">
                            <Label  Visibility="{Binding AlertEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center" Margin="0,-40,0,0">Volume</Label>
                            <ToggleButton Grid.Column="1" 
                                              IsChecked="{Binding HasCustomItemSound}"
                                              x:Name="SelectItemSound"
                                              HorizontalAlignment="Left" 
                                              ToolTip="Custom Sound" 
                                              Cursor="Hand" 
                                              VerticalAlignment="Top"
                                              Height="35" Width="35" 
                                              Style="{DynamicResource MetroCircleToggleButtonStyle}"
                                              Margin="5,-6,0,0">
                                <local:IconPack Foreground="White"
                                                    Opacity="0.8"
                                                    Margin="1,1,0,0"
                                                    Width="20"
                                                    Height="20"
                                            Data="{x:Static local:IconPackData.CustomSound}"/>
                            </ToggleButton>
                        </StackPanel>
                        <Slider
                                Grid.Column="1"
                                Visibility="{Binding ItemAlertEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                                Margin="4,25,0,0"
                                Controls:SliderHelper.ChangeValueBy="SmallChange"
                                Controls:SliderHelper.EnableMouseWheel="MouseHover"
                                AutoToolTipPlacement="TopLeft"
                                LargeChange="10"
                                Maximum="100"
                                Minimum="0"
                                Orientation="Horizontal"
                                SmallChange="1"
                                Value="{Binding ItemAlertVolume}" />
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Hotkey">
                <Grid Margin="30,0,30,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <StackPanel>
                        <Label Content="Hotkey" Style="{DynamicResource LabelHeaderStyle}" />
                        <TextBlock HorizontalAlignment="Center" Foreground="LightGray" FontFamily="pack://application:,,,/Assets/#Fontin">For the most recent offer.</TextBlock>
                    </StackPanel>
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <ContentControl Focusable="False" x:Name="MainHotkey" Margin="45,0,45,0"/>
                        <ItemsControl x:Name="Hotkeys" Focusable="False" HorizontalAlignment="Center" Grid.Row="1">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Feature">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Label Content="Feature" Style="{DynamicResource LabelHeaderStyle}" />
                    <Grid Grid.Row="1" Margin="30,0,30,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Viewbox Margin="0,15,0,0">
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <Controls:ToggleSwitch
                                               Margin="30,0,0,0"
                                               Header="Incoming Trade"
                                               IsChecked="{Binding IncomingTradeEnabled}"/>
                            <Controls:ToggleSwitch
                                               Margin="30,0,0,0"
                                               Header="Outgoing Trade"
                                               IsChecked="{Binding OutgoingTradeEnabled}"/>
                            <Controls:ToggleSwitch Grid.Row="1"
                                                   Margin="30,0,0,0"
                                                   Header="Delete Item"
                                                   IsChecked="{Binding DeleteItemEnabled}"/>
                            <Controls:ToggleSwitch Grid.Row="1"
                                                   Margin="30,0,0,0"
                                                   Header="Hideout"
                                                   IsChecked="{Binding HideoutEnabled}"/>
                            <Controls:ToggleSwitch Grid.Row="1"
                                                Margin="30,0,0,0"
                                                Header="Guild Hideout"
                                                IsChecked="{Binding GuildHideoutEnabled}"/>
                            </StackPanel>
                        </Viewbox>
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <ContentControl
                                            Focusable="False"
                                            x:Name="OpenWikiHotkey" 
                                            VerticalAlignment="Center" 
                                            HorizontalAlignment="Center"/>
                            <ContentControl Grid.Column="1"
                                            Focusable="False"
                                            x:Name="GuildHideoutHotkey" 
                                            VerticalAlignment="Center" 
                                            HorizontalAlignment="Center"/>
                            <ContentControl Grid.Row="1"
                                            Focusable="False" 
                                            x:Name="MonsterRemainingHotkey" 
                                            VerticalAlignment="Center" 
                                            HorizontalAlignment="Center"/>
                            <ContentControl Grid.Row="1" 
                                            Grid.Column="1" 
                                            Focusable="False" 
                                            x:Name="SearchItemHotkey" 
                                            VerticalAlignment="Center" 
                                            HorizontalAlignment="Center"/>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Advanced">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Label Content="Advanced" Style="{DynamicResource LabelHeaderStyle}" />

                    <StackPanel Grid.Row="1" Margin="30,0,30,0">
                        <Grid Grid.Row="1" Margin="0,30,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock FontSize="18">Life Foreground</TextBlock>
                            <xctk:ColorPicker SelectedColor="{Binding LifebarColor}" Foreground="Black" HorizontalAlignment="Left" Grid.Column="1" Margin="10,0,0,0" Width="100" AvailableColorsSortingMode="HueSaturationBrightness" ></xctk:ColorPicker>
                            <TextBlock FontSize="18" Grid.Row="1" Margin="0,30,0,0">UI Scaling</TextBlock>
                            <Slider Grid.Row="1"
                                Grid.Column="1"
                                Margin="4,30,0,0"
                                Controls:SliderHelper.ChangeValueBy="SmallChange"
                                Controls:SliderHelper.EnableMouseWheel="MouseHover"
                                LargeChange="0.2"
                                Maximum="1.5"
                                Minimum="1"
                                Orientation="Horizontal"
                                SmallChange="0.1"
                                Value="{Binding TradebarScaling}" />
                        </Grid>
                        <StackPanel Orientation="Horizontal" Margin="0,30,0,0" HorizontalAlignment="Left">
                            <Controls:ToggleSwitch 
                                               Header="Auto Whisper"
                                               IsChecked="{Binding ClipboardEnabled}"/>
                            <Controls:ToggleSwitch 
                                                   Margin="30,0,0,0"
                                               Header="Auto Kick"
                                               IsChecked="{Binding AutoKickEnabled}"/>
                            <Controls:ToggleSwitch 
                                                   Margin="30,0,0,0"
                                               Header="Release Note"
                                               IsChecked="{Binding ShowReleaseNote}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,30,0,0" HorizontalAlignment="Left">
                            <Controls:ToggleSwitch Grid.Row="1"
                                                   VerticalAlignment="Top"
                                                   HorizontalAlignment="Center"
                                                   Header="Detect Sold"
                                                   IsChecked="{Binding SoldDetection}"/>
                            <Controls:ToggleSwitch Grid.Row="1"
                                                   VerticalAlignment="Top"
                                                   Margin="30,0,0,0"
                                                   HorizontalAlignment="Center"
                                                   Header="Always Visible"
                                                   IsChecked="{Binding AlwaysVisible}"/>
                            <Controls:ToggleSwitch Grid.Row="1"
                                                   VerticalAlignment="Top"
                                                   Margin="30,0,0,0"
                                                   HorizontalAlignment="Center"
                                                   Header="Debug Mode"
                                                   IsChecked="{Binding DebugEnabled}"/>
                            <Controls:ToggleSwitch Grid.Row="2"
                                               Grid.Column="2"
                                               Header="Startup Animation"
                                               Margin="30,0,0,0"
                                               HorizontalAlignment="Left"
                                               IsChecked="{Binding ShowStartupAnimation}"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Lurker Pro">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Label Content="Lurker Pro" Style="{DynamicResource LabelHeaderStyle}" />
                    <StackPanel VerticalAlignment="Center" Grid.Row="1" HorizontalAlignment="Center" Margin="30,0,30,0">
                        <TextBlock TextWrapping="Wrap" TextAlignment="Center">Being a Lurker Pro is a good way to show your appreciation for the work I've done, and help support the future development of the program. Furthermore you will unlock juicy features that is currently being developed.</TextBlock>

                        <Grid Margin="0,-10,0,0">
                            <local:IconPack Foreground="{DynamicResource AccentColorBrush}"
                                            Width="150"
                                            Margin="0,20,0,10"
                                            Visibility="{Binding Pledging, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            Data="{x:Static local:IconPackData.Beer}"/>
                            <local:IconPack Foreground="{DynamicResource AccentColorBrush1}"
                                            Width="150"
                                            Margin="0,20,0,10"
                                            Visibility="{Binding NotConnected, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            Data="{x:Static local:IconPackData.Beer}"/>
                            <local:IconPack Foreground="{DynamicResource AccentColorBrush1}"
                                            Width="150"
                                            Margin="0,20,0,10"
                                            Visibility="{Binding NotPledging, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            Data="{x:Static local:IconPackData.Beer}"/>
                        </Grid>
                        <Button Style="{DynamicResource Tag}" 
                                Controls:ButtonHelper.PreserveTextCase="True" 
                                x:Name="GetPatreonId" HorizontalAlignment="Center" 
                                Visibility="{Binding Pledging, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                Margin="0,0,0,10"
                                Content="{Binding BlessingText}"
                                FontSize="20"></Button>
                        
                        <Button x:Name="LoginToPatreon"
                                Style="{DynamicResource Patreon}"
                                FontSize="20"
                                Margin="0,0,0,10"
                                Visibility="{Binding NotConnected, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Button.Content>
                                <Image Height="50"
                                       Margin="-6"
                                   Cursor="Hand"
                                   VerticalAlignment="Bottom"
                                   HorizontalAlignment="Right"
                                   Visibility="{Binding NotPledging, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   cal:Message.Attach="[Event MouseUp] = [Action OpenLurkerPro]"
                                   Source="https://user-images.githubusercontent.com/5436436/88303508-1a537980-ccd5-11ea-9e27-9139f994101a.png"
                           />
                            </Button.Content></Button>
                        <Button x:Name="Pledge" 
                                Style="{DynamicResource Patreon}" 
                                Margin="0,0,0,10"
                                FontSize="20"
                                Visibility="{Binding ConnectedWithoutPledging, Converter={StaticResource BooleanToVisibilityConverter}}">Become a patron</Button>
                        <Button x:Name="StartTrial" 
                                HorizontalAlignment="Center"
                                FontSize="16" 
                                Style="{DynamicResource Tag}"                                
                                Visibility="{Binding TrialAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Button.Content>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40"></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition Width="40"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="1">Free Trial</TextBlock>
                                    <TextBlock
                                        Grid.Column="2"
                                        HorizontalAlignment="Center"
                                        FontSize="10" Foreground="Gray">(7 days)</TextBlock>
                                </Grid>

                            </Button.Content>
                        </Button>
                    </StackPanel>
                    <Grid Grid.Row="2" Height="70" IsEnabled="{Binding Pledging}">
                        <StackPanel Margin="30,0,0,0" Orientation="Horizontal">
                            <Controls:ToggleSwitch Header="Item Lurker"
                                                   IsChecked="{Binding SearchEnabled}"/>
                            <Controls:ToggleSwitch Margin="30,0,0,0"
                                                   Header="Map Lurker"
                                                   IsChecked="{Binding MapEnabled}"/>
                            <Controls:ToggleSwitch Margin="30,0,0,0"
                                                   Header="Dashboard"
                                                   IsChecked="{Binding DashboardEnabled}"/>

                            <Button Width="30"
                            x:Name="OpenDashboard"
                            Grid.Column="1"
                            Cursor="Hand"
                            ToolTip="Open"
                            BorderThickness="0"
                            Margin="-12,-46,0,0"
                            Height="30" 
                            Visibility="{Binding HasYoutube, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Style="{DynamicResource MetroCircleButtonStyle}">
                                <Button.Content>
                                    <local:IconPack HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Foreground="{DynamicResource AccentColorBrush}"
                                            Grid.Row="2"
                                            Height="15"
                                            Width="15"
                                            Data="{x:Static local:IconPackData.Open}"/>
                                </Button.Content>
                            </Button>

                            <Button x:Name="OpenPushBullet" VerticalAlignment="Center" Cursor="Hand" Margin="30,0,0,0" Background="#42a66e" BorderThickness="0">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal" Margin="8,4,8,4">
                                        <local:IconPack HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Foreground="White"
                                            Grid.Row="2"
                                            Height="30"
                                            Width="25"
                                            Data="{x:Static local:IconPackData.Cellphone}"/>
                                        <TextBlock Margin="8,0,0,0" VerticalAlignment="Center" FontSize="18">Notifications</TextBlock>
                                    </StackPanel>
                                    
                                </Button.Content>
                            </Button>
                        </StackPanel>
                    </Grid>
                    <Controls:Flyout IsOpen="{Binding IsPushBulletOpen}" BorderThickness="1,0,0,0" BorderBrush="Gray" FlowDirection="LeftToRight" Position="Right" Grid.RowSpan="3" Width="225">
                        <Controls:Flyout.Header>
                            <ComboBox x:Name="PushProviders" DisplayMemberPath="ProviderName" HorizontalAlignment="Left" FontSize="20" BorderThickness="0"/>
                        </Controls:Flyout.Header>
                        <ContentControl x:Name="PushProviderViewModel"/>
                    </Controls:Flyout>
                </Grid>
            </TabItem>
        </Controls:MetroAnimatedTabControl>
        <StackPanel Orientation="Horizontal" Visibility="{Binding UpToDate, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Button x:Name="UserGuide"
                Margin="20,8,8,8" 
                VerticalAlignment="Bottom" 
                HorizontalAlignment="Left" 
                Height="10" >Guide</Button>
            <Button x:Name="CheatSheet"
                Margin="4,8,8,8" 
                VerticalAlignment="Bottom" 
                HorizontalAlignment="Left" 
                Height="10">Cheat Sheet</Button>
        </StackPanel>
        
        <Button x:Name="Update"
                Margin="36,8,8,8" 
                Visibility="{Binding NeedsUpdate, Converter={StaticResource BooleanToVisibilityConverter}}"
                VerticalAlignment="Bottom" 
                HorizontalAlignment="Left" 
                Height="10" 
                Width="80">Update</Button>

        <Button x:Name="SaveSettings"
                Style="{DynamicResource Tag}"
                FontSize="20"
                VerticalAlignment="Top" 
                HorizontalAlignment="Right" 
                Visibility="{Binding Modified, Converter={StaticResource BooleanToVisibilityConverter}}"
                Height="40" 
                Width="60"
                Margin="8">
            <Button.Content>
                <local:IconPack HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Foreground="White"
                                            Grid.Row="2"
                                            Height="20"
                                            Width="20"
                                            Data="{x:Static local:IconPackData.Save}"/>
            </Button.Content>
        </Button>
        <lottieSharp:LottieAnimationView
            x:Name="LottieAnimationView"
            FileName="{Binding AnimationFilePath}"
            Visibility="{Binding NotPledging, Converter={StaticResource BooleanToVisibilityConverter}}"
            DefaultCacheStrategy="None"
            SnapsToDevicePixels="True"
            Margin="134,95,0,0"
            Height="30"
            AutoPlay="True"
            RepeatCount="1"
            VerticalAlignment="Center" 
            HorizontalAlignment="Left"/>
    </Grid>
</Controls:MetroWindow>
