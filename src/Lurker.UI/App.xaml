<Application x:Class="Lurker.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Models="clr-namespace:Lurker.Patreon.Models;assembly=Lurker.Patreon"
             xmlns:Converters="clr-namespace:Lurker.UI.Converters"
             xmlns:local="clr-namespace:Lurker.UI">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <local:AppBootstrapper x:Key="bootstrapper" />
                    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                </ResourceDictionary>
                <ResourceDictionary>
                    <Style x:Key="PackIconStyle" TargetType="{x:Type local:IconPack}">
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="FlowDirection" Value="LeftToRight" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="VerticalAlignment" Value="Stretch" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="SnapsToDevicePixels" Value="False" />
                        <Setter Property="UseLayoutRounding" Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type local:IconPack}">
                                    <Grid>
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <Grid x:Name="PART_InnerGrid"
                                              RenderTransformOrigin="0.5 0.5"
                                              Margin="{TemplateBinding BorderThickness}">
                                            <Viewbox Margin="{TemplateBinding Padding}">
                                                <Path Fill="{TemplateBinding Foreground}"
                                              Stretch="Uniform"
                                              Data="{Binding Data, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                              SnapsToDevicePixels="False"
                                              UseLayoutRounding="False" />
                                            </Viewbox>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                        <!-- Accent and AppTheme setting -->
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Crimson.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseDark.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type local:IconPack}" BasedOn="{StaticResource PackIconStyle}" />
            <Style x:Key="LabelHeaderStyle"
                   BasedOn="{StaticResource {x:Type Label}}"
                   TargetType="{x:Type Label}">
                <Setter Property="FontSize" Value="32" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            
            <Style x:Key="Tag"
                   BasedOn="{StaticResource {x:Type Button}}"
                   TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource AccentColorBrush3}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="4">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="Background" Value="{StaticResource AccentColorBrush3}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{StaticResource AccentColorBrush2}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="6"></ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Patreon"
                   BasedOn="{StaticResource {x:Type Button}}"
                   TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource AccentColorBrush3}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="4">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="Background" Value="#f96854"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#fa7c6b" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="6"></ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Currency" 
                   TargetType="{x:Type ContentControl}">
                <Setter Property="Content">
                    <Setter.Value>
                        <Grid>
                            <Image Source="/Assets/Chaos.png"
                                   Visibility="{Binding CurrencyType,
                                            Converter={Converters:CurrencyTypeConverter}, 
                                            ConverterParameter={x:Static Models:CurrencyType.Chaos}}"/>
                            <Image Source="/Assets/Exalted.png"
                                   Visibility="{Binding CurrencyType,
                                            Converter={Converters:CurrencyTypeConverter}, 
                                            ConverterParameter={x:Static Models:CurrencyType.Exalted}}"/>
                            <Image Source="/Assets/Mirror.png"
                                   Visibility="{Binding CurrencyType,
                                            Converter={Converters:CurrencyTypeConverter}, 
                                            ConverterParameter={x:Static Models:CurrencyType.Mirror}}"/>
                            <Image Source="/Assets/Fusing.png"
                                   Visibility="{Binding CurrencyType,
                                            Converter={Converters:CurrencyTypeConverter}, 
                                            ConverterParameter={x:Static Models:CurrencyType.Fusing}}"/>
                            <Image Source="/Assets/Chromatic.png"
                                   Visibility="{Binding CurrencyType,
                                            Converter={Converters:CurrencyTypeConverter}, 
                                            ConverterParameter={x:Static Models:CurrencyType.Chromatic}}"/>
                            <Image Grid.RowSpan="3"
                                   Source="/Assets/Vaal.png"
                                   Visibility="{Binding CurrencyType,
                                            Converter={Converters:CurrencyTypeConverter}, 
                                            ConverterParameter={x:Static Models:CurrencyType.Vaal}}"/>
                            <Image Source="/Assets/Alchemy.png"
                                   Visibility="{Binding CurrencyType,
                                            Converter={Converters:CurrencyTypeConverter}, 
                                            ConverterParameter={x:Static Models:CurrencyType.Alchemy}}"/>
                            <Image Source="/Assets/Regal.png"
                                   Visibility="{Binding CurrencyType,
                                            Converter={Converters:CurrencyTypeConverter}, 
                                            ConverterParameter={x:Static Models:CurrencyType.Regal}}"/>
                            <Image Source="/Assets/Divine.png"
                                   Visibility="{Binding CurrencyType,
                                            Converter={Converters:CurrencyTypeConverter}, 
                                            ConverterParameter={x:Static Models:CurrencyType.Divine}}"/>
                            <Image Source="/Assets/Alteration.png"
                                   Visibility="{Binding CurrencyType,
                                            Converter={Converters:CurrencyTypeConverter}, 
                                            ConverterParameter={x:Static Models:CurrencyType.Alteration}}"/>
                            <Image Source="/Assets/Jeweller.png"
                                   Visibility="{Binding CurrencyType,
                                            Converter={Converters:CurrencyTypeConverter}, 
                                            ConverterParameter={x:Static Models:CurrencyType.Jeweller}}"/>
                        </Grid>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
